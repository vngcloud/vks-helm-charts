# Default values for vngcloud-blockstorage-csi-driver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: vcr.vngcloud.vn/81-vks-public/vngcloud-blockstorage-csi-driver
  # Overrides the image tag whose default is v{{ .Chart.AppVersion }}
  tag: ""
  pullPolicy: Always

# -- Custom labels to add into metadata
customLabels:
  {}
  # k8s-app: vngcloud-blockstorage-csi-driver

sidecars:
  provisioner:
    env: []
    image:
      pullPolicy: IfNotPresent
      repository: vcr.vngcloud.vn/81-vks-public/csi-provisioner
      tag: "v4.0.1"
    logLevel: 2
    # Additional parameters provided by external-provisioner.
    additionalArgs:
      - "--timeout=5m"
    # Grant additional permissions to external-provisioner
    additionalClusterRoleRules:
    resources:
      limits:
        memory: 100Mi
        cpu: 10m
    # Tune leader lease election for csi-provisioner.
    # Leader election is on by default.
    leaderElection:
      enabled: true
      # Optional values to tune lease behavior.
      # The arguments provided must be in an acceptable time.ParseDuration format.
      # Ref: https://pkg.go.dev/flag#Duration
      # leaseDuration: "15s"
      # renewDeadline: "10s"
      # retryPeriod: "5s"
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
  attacher:
    env: []
    image:
      pullPolicy: IfNotPresent
      repository: vcr.vngcloud.vn/81-vks-public/csi-attacher
      tag: "v4.5.1"
    # Tune leader lease election for csi-attacher.
    # Leader election is on by default.
    leaderElection:
      enabled: true
      # Optional values to tune lease behavior.
      # The arguments provided must be in an acceptable time.ParseDuration format.
      # Ref: https://pkg.go.dev/flag#Duration
      # leaseDuration: "15s"
      # renewDeadline: "10s"
      # retryPeriod: "5s"
    logLevel: 2
    # Additional parameters provided by external-attacher.
    additionalArgs: []
    # Grant additional permissions to external-attacher
    additionalClusterRoleRules: []
    resources:
      limits:
        memory: 100Mi
        cpu: 10m
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
  snapshotter:
    # Enables the snapshotter sidecar even if the snapshot CRDs are not installed
    forceEnable: false
    env: []
    image:
      pullPolicy: IfNotPresent
      repository: vcr.vngcloud.vn/81-vks-public/csi-snapshotter
      tag: "v7.0.2"
    logLevel: 2
    # Additional parameters provided by csi-snapshotter.
    additionalArgs: []
    # Grant additional permissions to csi-snapshotter
    additionalClusterRoleRules: []
    resources:
      limits:
        memory: 100Mi
        cpu: 10m
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
  livenessProbe:
    image:
      pullPolicy: IfNotPresent
      repository: vcr.vngcloud.vn/81-vks-public/csi-livenessprobe
      tag: "v2.9.0"
    # Additional parameters provided by livenessprobe.
    additionalArgs: []
    resources:
      limits:
        memory: 100Mi
        cpu: 10m
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
  resizer:
    env: []
    image:
      pullPolicy: IfNotPresent
      repository: vcr.vngcloud.vn/81-vks-public/csi-resizer
      tag: "v1.9.4"
    # Tune leader lease election for csi-resizer.
    # Leader election is on by default.
    leaderElection:
      enabled: true
      # Optional values to tune lease behavior.
      # The arguments provided must be in an acceptable time.ParseDuration format.
      # Ref: https://pkg.go.dev/flag#Duration
      # leaseDuration: "15s"
      # renewDeadline: "10s"
      # retryPeriod: "5s"
    logLevel: 2
    # Additional parameters provided by external-resizer.
    additionalArgs: []
    # Grant additional permissions to external-resizer
    additionalClusterRoleRules: []
    resources:
      limits:
        memory: 100Mi
        cpu: 10m
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
  nodeDriverRegistrar:
    env: []
    image:
      pullPolicy: IfNotPresent
      repository: vcr.vngcloud.vn/81-vks-public/csi-node-driver-registrar
      tag: "v2.9.4"
    logLevel: 5
    # Additional parameters provided by node-driver-registrar.
    additionalArgs: []
    resources:
      limits:
        memory: 100Mi
        cpu: 10m
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
    livenessProbe:
      exec:
        command:
        - /csi-node-driver-registrar
        - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
        - --mode=kubelet-registration-probe
      initialDelaySeconds: 30
      periodSeconds: 90
      timeoutSeconds: 15
  volumemodifier:
    env: []
    image:
      pullPolicy: IfNotPresent
      repository: vcr.vngcloud.vn/81-vks-public/vngcloud-csi-volume-modifier
      tag: "v1.0.0"
    leaderElection:
      enabled: true
      # Optional values to tune lease behavior.
      # The arguments provided must be in an acceptable time.ParseDuration format.
      # Ref: https://pkg.go.dev/flag#Duration
      # leaseDuration: "15s"
      # renewDeadline: "10s"
      # retryPeriod: "5s"
    logLevel: 2
    # Additional parameters provided by volume-modifier-for-k8s.
    additionalArgs: []
    resources:
      limits:
        memory: 100Mi
        cpu: 10m
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false

proxy:
  http_proxy:
  no_proxy:

imagePullSecrets: []
nameOverride:
fullnameOverride:

vngcloudAccessSecret:
  name: vngcloud-csi-secret
  keyId: key_id                                        # PUT YOUR ClientID here
  accessKey: access_key                                # PUT YOUR ClientSecret here
  identityEndpoint: "https://iamapis.vngcloud.vn/accounts-api"
  vserverEndpoint: "https://hcm-3.api.vngcloud.vn/vserver/vserver-gateway"
  vksClusterId: "cluster_id"                              # PUT YOUR ClusterID here

controller:
  batching: false
  volumeModificationFeature:
    enabled: true
  # Additional parameters provided by vngcloud-blockstorage-csi-driver controller.
  additionalArgs: []
  sdkDebugLog: false
  loggingFormat: text
  affinity:
  # The default filesystem type of the volume to provision when fstype is unspecified in the StorageClass.
  # If the default is not set and fstype is unset in the StorageClass, then no fstype will be set
  defaultFsType: ext4
  env: []
  # Use envFrom to reference ConfigMaps and Secrets across all containers in the deployment
  envFrom: []
  # If set, add pv/pvc metadata to plugin create requests as parameters.
  extraCreateMetadata: true
  # Extra volume tags to attach to each dynamically provisioned volume.
  # ---
  # extraVolumeTags:
  #   key1: value1
  #   key2: value2
  extraVolumeTags: {}
  httpEndpoint:
  # (deprecated) The TCP network address where the prometheus metrics endpoint
  # will run (example: `:8080` which corresponds to port 8080 on local host).
  # The default is empty string, which means metrics endpoint is disabled.
  # ---
  enableMetrics: false
  serviceMonitor:
    # Enables the ServiceMonitor resource even if the prometheus-operator CRDs are not installed
    forceEnable: false
    # Additional labels for ServiceMonitor object
    labels:
      release: prometheus
  # If set to true, VngCloud API call metrics will be exported to the following
  # TCP endpoint: "0.0.0.0:3301"
  # ---
  # ID of the Kubernetes cluster used for tagging provisioned VngCloud volumes (optional).
  k8sTagClusterId:
  logLevel: 5
  userAgentExtra: "helm"
  nodeSelector: {}
  deploymentAnnotations: {}
  podAnnotations: {}
  podLabels: {}
  priorityClassName: vngcloud-blockstorage-csi-driver-priority-class
  region:
  replicaCount: 2
  revisionHistoryLimit: 10
  socketDirVolume:
    emptyDir: {}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  # type: RollingUpdate
  # rollingUpdate:
  #   maxSurge: 0
  #   maxUnavailable: 1
  resources:
    requests:
      cpu: 10m
      memory: 40Mi
    limits:
      memory: 256Mi
  serviceAccount:
  # A service account will be created for you if set to true. Set to false if you want to use your own.
    create: true
    name: vngcloud-csi-controller-sa
    annotations: {}
    automountServiceAccountToken: true
  tolerations:
    - operator: Exists
  topologySpreadConstraints: []
  # securityContext on the controller pod
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
  # Add additional volume mounts on the controller with controller.volumes and controller.volumeMounts
  volumes:
    - name: add-hosts
      hostPath:
        path: /etc/hosts


  # Add additional volumes to be mounted onto the controller:
  # - name: custom-dir
  #   hostPath:
  #     path: /path/to/dir
  #     type: Directory
  volumeMounts:
    - name: add-hosts
      mountPath: /etc/hosts
  # And add mount paths for those additional volumes:
  # - name: custom-dir
  #   mountPath: /mount/path
  # ---
  # securityContext on the controller container (see sidecars for securityContext on sidecar containers)
  containerSecurityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
  initContainers: []
  # containers to be run before the controller's container starts.
  #
  # Example:
  #
  # - name: wait
  #   image: busybox
  #   command: [ 'sh', '-c', "sleep 20" ]
  # Enable opentelemetry tracing for the plugin running on the daemonset
  otelTracing: {}
  #  otelServiceName: vngcloud-csi-controller
  #  otelExporterEndpoint: "http://localhost:4317"

node:
  env: []
  envFrom: []
  kubeletPath: /var/lib/kubelet
  loggingFormat: text
  logLevel: 5
  priorityClassName: vngcloud-blockstorage-csi-driver-priority-class
  additionalArgs: []
  affinity: {}
  nodeSelector: {}
  daemonSetAnnotations: {}
  podAnnotations: {}
  podLabels: {}
  tolerateAllTaints: true
  tolerations:
  - operator: Exists
  resources:
    requests:
      cpu: 10m
      memory: 40Mi
    limits:
      memory: 256Mi
  revisionHistoryLimit: 10
  probeDirVolume:
    emptyDir: {}
  serviceAccount:
    create: true
    name: vngcloud-csi-node-sa
    annotations: {}
    automountServiceAccountToken: true
  # Enable the linux daemonset creation
  enableLinux: true
  reservedVolumeAttachments:
  # The "maximum number of attachable volumes" per node
  # Cannot be specified at the same time as `node.reservedVolumeAttachments`
  volumeAttachLimit:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "10%"
  hostNetwork: false
  # securityContext on the node pod
  securityContext:
    # The node pod must be run as root to bind to the registration/driver sockets
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0
    fsGroup: 0
  # Add additional volume mounts on the node pods with node.volumes and node.volumeMounts
  volumes:
    - name: add-hosts
      hostPath:
        path: /etc/hosts
  # Add additional volumes to be mounted onto the node pods:
  # - name: custom-dir
  #   hostPath:
  #     path: /path/to/dir
  #     type: Directory
  volumeMounts:
    - name: add-hosts
      mountPath: /etc/hosts
  # And add mount paths for those additional volumes:
  # - name: custom-dir
  #   mountPath: /mount/path
  # ---
  # securityContext on the node container (see sidecars for securityContext on sidecar containers)
  containerSecurityContext:
    readOnlyRootFilesystem: true
    privileged: true
  # Enable opentelemetry tracing for the plugin running on the daemonset
  otelTracing: {}
  #  otelServiceName: ebs-csi-node
  #  otelExporterEndpoint: "http://localhost:4317"

additionalDaemonSets:
  # Additional node DaemonSets, using the node config structure
  # See docs/additional-daemonsets.md for more information
  #
  # example:
  #   nodeSelector:
  #     node.kubernetes.io/instance-type: c5.large
  #   volumeAttachLimit: 15

# Enable compatibility for the A1 instance family via use of an AL2-based image in a separate DaemonSet
# a1CompatibilityDaemonSet: true

storageClasses:
  # Add StorageClass resources like:
  - name: vngcloud-ssd-3000-delete
    enabled: true
    labels:
      mininum-size: "1Gi"
      maximum-size: "5000Gi"
      throughput: "200MBps"
      iops: "3000"
      volume-type: "SSD"
    volumeBindingMode: WaitForFirstConsumer
    reclaimPolicy: Delete
    allowVolumeExpansion: true
    parameters:
      type: "ssd-iops3000"

  - name: vngcloud-nvme-5000-delete
    enabled: true
    annotations:
      storageclass.kubernetes.io/is-default-class: "true"
    labels:
      mininum-size: "1Gi"
      maximum-size: "10000Gi"
      throughput: "400MBps"
      iops: "5000"
      volume-type: "NVME"
    volumeBindingMode: WaitForFirstConsumer
    reclaimPolicy: Delete
    allowVolumeExpansion: true
    parameters:
      type: "nvme-iops5000"
#
#  - name: vngcloud-ssd-3000-delete
#    enabled: false
#    labels:
#      mininum-size: "1Gi"
#      maximum-size: "5000Gi"
#      throughput: "200MBps"
#      iops: "3000"
#      volume-type: "SSD"
#    volumeBindingMode: Immediate
#    reclaimPolicy: Delete
#    allowVolumeExpansion: true
#    parameters:
#      type: "vtype-61c3fc5b-f4e9-45b4-8957-8aa7b6029018"
#  - name: vngcloud-nvme-5000-delete
#    enabled: false
#    labels:
#      mininum-size: "1Gi"
#      maximum-size: "10000Gi"
#      throughput: "400MBps"
#      iops: "5000"
#      volume-type: "NVME"
#    volumeBindingMode: Immediate
#    reclaimPolicy: Delete
#    allowVolumeExpansion: true
#    parameters:
#      type: "vtype-7a7a8610-34f5-11ee-be56-0242ac120002"

volumeSnapshotClasses: []
# Add VolumeSnapshotClass resources like:
# - name: ebs-vsc
#   # annotation metadata
#   annotations:
#     snapshot.storage.kubernetes.io/is-default-class: "true"
#   # label metadata
#   labels:
#     my-label-is: supercool
#   # deletionPolicy must be specified
#   deletionPolicy: Delete
#   parameters:

helmTester:
  enabled: true
  # Supply a custom image to the ebs-csi-driver-test pod in helm-tester.yaml
  image: "gcr.io/k8s-staging-test-infra/kubekins-e2e:v20231206-f7b83ffbe6-master"
